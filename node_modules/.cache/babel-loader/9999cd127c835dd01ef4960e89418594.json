{"ast":null,"code":"var _jsxFileName = \"/Users/brycelewis/Documents/Work/Resume2/my-resume/src/Projects/MacroCalculator/Components/OutputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container, Button, Grid, Paper, Typography, TextField, MenuItem, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio } from '@mui/material';\nimport { makeStyles } from '@material-ui/core';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OutputForm = ({\n  weightChange,\n  submitted,\n  BMR,\n  BMRAdjusted,\n  BMRGoal,\n  protien,\n  carbs,\n  fat,\n  macroBreakdown,\n  setMacroBreakdown,\n  calcMacros\n}) => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [modalContext, setModalContext] = React.useState('');\n\n  const handleOpen = context => {\n    setOpen(true);\n    setModalContext(context);\n  };\n\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    setOpen(true);\n  }, [modalContext]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Message, {\n      open: open,\n      setOpen: setOpen,\n      handleOpen: handleOpen,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            width: '40ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        style: {\n          paddingTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"bmr\",\n          label: \"Basal Metabolic Rate (BMR)\",\n          variant: \"outlined\",\n          value: `${BMR} cal`,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"bmr-adjusted\",\n          label: \"BMR Adjusted\",\n          variant: \"outlined\",\n          value: `${BMRAdjusted} cal`,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"bmr-goal\",\n          label: `Goal Calories (${weightChange >= 0 ? '+' : ''} ${weightChange} calories) `,\n          variant: \"outlined\",\n          value: `${BMRGoal} cal`,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          marginTop: '20px',\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                children: \"Customization Options\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                row: true,\n                \"aria-label\": \"options\",\n                name: \"row-radio-buttons-group\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"balanced\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 32\n                  }, this),\n                  label: \"Balanced\",\n                  onClick: () => {\n                    setMacroBreakdown({\n                      carbs: 0.45,\n                      protien: 0.3,\n                      fat: 0.25\n                    });\n                    calcMacros(BMRGoal, {\n                      carbs: 0.45,\n                      protien: 0.3,\n                      fat: 0.25\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"high-carb\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 32\n                  }, this),\n                  label: \"High Carb\",\n                  onClick: () => {\n                    setMacroBreakdown({\n                      carbs: 0.5,\n                      protien: 0.3,\n                      fat: 0.2\n                    });\n                    calcMacros(BMRGoal, {\n                      carbs: 0.5,\n                      protien: 0.3,\n                      fat: 0.2\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"low-carb\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 32\n                  }, this),\n                  label: \"Low Carb\",\n                  onClick: () => {\n                    setMacroBreakdown({\n                      carbs: 0.4,\n                      protien: 0.3,\n                      fat: 0.3\n                    });\n                    calcMacros(BMRGoal, {\n                      carbs: 0.4,\n                      protien: 0.3,\n                      fat: 0.3\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"cut\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 32\n                  }, this),\n                  label: \"BodyBuilder Cut\",\n                  onClick: () => {\n                    handleOpen(); // setMacroBreakdown({\n                    //   carbs: 0.42,\n                    //   protien: 0.38,\n                    //   fat: 0.2,\n                    // });\n                    // calcMacros(BMRGoal, {\n                    //   carbs: 0.42,\n                    //   protien: 0.38,\n                    //   fat: 0.2,\n                    // });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"bulk\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 32\n                  }, this),\n                  label: \"BodyBuilder Clean Bulk\",\n                  onClick: () => {\n                    handleOpen(); // setMacroBreakdown({\n                    //   carbs: 0.42,\n                    //   protien: 0.28,\n                    //   fat: 0.3,\n                    // });\n                    // calcMacros(BMRGoal, {\n                    //   carbs: 0.42,\n                    //   protien: 0.28,\n                    //   fat: 0.3,\n                    // });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Graph Placeholder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              sx: {\n                '& > :not(style)': {\n                  m: 1,\n                  width: '15ch'\n                }\n              },\n              noValidate: true,\n              autoComplete: \"off\",\n              style: {\n                paddingTop: '15px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"carbs\",\n                label: \"Carbs\",\n                variant: \"outlined\",\n                value: `${carbs} g`,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"carbs-percent\",\n                label: \"Carbs\",\n                variant: \"outlined\",\n                value: `${Math.round(Math.round(macroBreakdown.carbs * 100))}%`,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"protien\",\n                label: \"Protien\",\n                variant: \"outlined\",\n                value: `${protien} g`,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"protien-percent\",\n                label: \"Protien\",\n                variant: \"outlined\",\n                value: `${Math.round(macroBreakdown.protien * 100)}%`,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"fat\",\n                label: \"Fat\",\n                variant: \"outlined\",\n                value: `${fat} g`,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"fat-percent\",\n                label: \"Fat\",\n                variant: \"outlined\",\n                value: `${macroBreakdown.fat * 100}%`,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OutputForm, \"h+6ryhcVLiO7cnOYj1+zH4AYwIg=\");\n\n_c = OutputForm;\nexport default OutputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutputForm\");","map":{"version":3,"sources":["/Users/brycelewis/Documents/Work/Resume2/my-resume/src/Projects/MacroCalculator/Components/OutputForm.js"],"names":["React","useEffect","useState","Box","Container","Button","Grid","Paper","Typography","TextField","MenuItem","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","makeStyles","Message","OutputForm","weightChange","submitted","BMR","BMRAdjusted","BMRGoal","protien","carbs","fat","macroBreakdown","setMacroBreakdown","calcMacros","open","setOpen","modalContext","setModalContext","handleOpen","context","handleClose","m","width","paddingTop","readOnly","marginTop","padding","Math","round"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  TextField,\n  MenuItem,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from '@mui/material';\nimport { makeStyles } from '@material-ui/core';\n\nimport Message from './Message';\n\nconst OutputForm = ({\n  weightChange,\n  submitted,\n  BMR,\n  BMRAdjusted,\n  BMRGoal,\n  protien,\n  carbs,\n  fat,\n  macroBreakdown,\n  setMacroBreakdown,\n  calcMacros,\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const [modalContext, setModalContext] = React.useState('');\n\n  const handleOpen = (context) => {\n    setOpen(true);\n    setModalContext(context);\n  };\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    setOpen(true);\n  }, [modalContext]);\n\n  return (\n    <Box>\n      <Message\n        open={open}\n        setOpen={setOpen}\n        handleOpen={handleOpen}\n        handleClose={handleClose}\n      />\n\n      {submitted && (\n        <Box>\n          <Box\n            component=\"form\"\n            sx={{\n              '& > :not(style)': { m: 1, width: '40ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n            style={{ paddingTop: '20px' }}\n          >\n            <TextField\n              id=\"bmr\"\n              label=\"Basal Metabolic Rate (BMR)\"\n              variant=\"outlined\"\n              value={`${BMR} cal`}\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n            <TextField\n              id=\"bmr-adjusted\"\n              label=\"BMR Adjusted\"\n              variant=\"outlined\"\n              value={`${BMRAdjusted} cal`}\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n            <TextField\n              id=\"bmr-goal\"\n              label={`Goal Calories (${\n                weightChange >= 0 ? '+' : ''\n              } ${weightChange} calories) `}\n              variant=\"outlined\"\n              value={`${BMRGoal} cal`}\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Box>\n\n          <Paper elevation={3} style={{ marginTop: '20px', padding: '20px' }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">\n                    Customization Options\n                  </FormLabel>\n                  <RadioGroup\n                    row\n                    aria-label=\"options\"\n                    name=\"row-radio-buttons-group\"\n                  >\n                    <FormControlLabel\n                      value=\"balanced\"\n                      control={<Radio />}\n                      label=\"Balanced\"\n                      onClick={() => {\n                        setMacroBreakdown({\n                          carbs: 0.45,\n                          protien: 0.3,\n                          fat: 0.25,\n                        });\n                        calcMacros(BMRGoal, {\n                          carbs: 0.45,\n                          protien: 0.3,\n                          fat: 0.25,\n                        });\n                      }}\n                    />\n                    <FormControlLabel\n                      value=\"high-carb\"\n                      control={<Radio />}\n                      label=\"High Carb\"\n                      onClick={() => {\n                        setMacroBreakdown({\n                          carbs: 0.5,\n                          protien: 0.3,\n                          fat: 0.2,\n                        });\n                        calcMacros(BMRGoal, {\n                          carbs: 0.5,\n                          protien: 0.3,\n                          fat: 0.2,\n                        });\n                      }}\n                    />\n                    <FormControlLabel\n                      value=\"low-carb\"\n                      control={<Radio />}\n                      label=\"Low Carb\"\n                      onClick={() => {\n                        setMacroBreakdown({\n                          carbs: 0.4,\n                          protien: 0.3,\n                          fat: 0.3,\n                        });\n                        calcMacros(BMRGoal, {\n                          carbs: 0.4,\n                          protien: 0.3,\n                          fat: 0.3,\n                        });\n                      }}\n                    />\n                    <FormControlLabel\n                      value=\"cut\"\n                      control={<Radio />}\n                      label=\"BodyBuilder Cut\"\n                      onClick={() => {\n                        handleOpen();\n\n                        // setMacroBreakdown({\n                        //   carbs: 0.42,\n                        //   protien: 0.38,\n                        //   fat: 0.2,\n                        // });\n                        // calcMacros(BMRGoal, {\n                        //   carbs: 0.42,\n                        //   protien: 0.38,\n                        //   fat: 0.2,\n                        // });\n                      }}\n                    />\n                    <FormControlLabel\n                      value=\"bulk\"\n                      control={<Radio />}\n                      label=\"BodyBuilder Clean Bulk\"\n                      onClick={() => {\n                        handleOpen();\n                        // setMacroBreakdown({\n                        //   carbs: 0.42,\n                        //   protien: 0.28,\n                        //   fat: 0.3,\n                        // });\n                        // calcMacros(BMRGoal, {\n                        //   carbs: 0.42,\n                        //   protien: 0.28,\n                        //   fat: 0.3,\n                        // });\n                      }}\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </Grid>\n              <Grid item xs={8}>\n                <h1>Graph Placeholder</h1>\n              </Grid>\n              <Grid item xs={4}>\n                <Box\n                  component=\"form\"\n                  sx={{\n                    '& > :not(style)': { m: 1, width: '15ch' },\n                  }}\n                  noValidate\n                  autoComplete=\"off\"\n                  style={{ paddingTop: '15px' }}\n                >\n                  <TextField\n                    id=\"carbs\"\n                    label=\"Carbs\"\n                    variant=\"outlined\"\n                    value={`${carbs} g`}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    id=\"carbs-percent\"\n                    label=\"Carbs\"\n                    variant=\"outlined\"\n                    value={`${Math.round(\n                      Math.round(macroBreakdown.carbs * 100)\n                    )}%`}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    id=\"protien\"\n                    label=\"Protien\"\n                    variant=\"outlined\"\n                    value={`${protien} g`}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    id=\"protien-percent\"\n                    label=\"Protien\"\n                    variant=\"outlined\"\n                    value={`${Math.round(macroBreakdown.protien * 100)}%`}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n\n                  <TextField\n                    id=\"fat\"\n                    label=\"Fat\"\n                    variant=\"outlined\"\n                    value={`${fat} g`}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    id=\"fat-percent\"\n                    label=\"Fat\"\n                    variant=\"outlined\"\n                    value={`${macroBreakdown.fat * 100}%`}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default OutputForm;\n"]},"metadata":{},"sourceType":"module"}