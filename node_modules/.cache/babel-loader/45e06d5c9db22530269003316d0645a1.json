{"ast":null,"code":"var _jsxFileName = \"/Users/brycelewis/Documents/Work/Resume2/my-resume/src/Projects/MacroCalculator/MacroCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Container, Button, Grid, Paper, Typography, TextField, MenuItem, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio } from '@mui/material';\nimport { makeStyles } from '@material-ui/core';\nimport { activityLevelOptions, weightChangeOptions } from './Assets/options';\nimport Hero from '../../Hero/Hero';\nimport Footer from '../../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MacroCalculator = props => {\n  _s();\n\n  const [weight, setWeight] = React.useState('');\n  const [heightFt, setHeightFt] = React.useState('');\n  const [heightIn, setHeightIn] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [activity, setActivity] = React.useState('');\n  const [weightChange, setWeightChange] = React.useState('');\n  const [BMR, setBMR] = React.useState('');\n  const [BMRAdjusted, setBMRAdjusted] = React.useState('');\n  const [BMRGoal, setBMRGoal] = React.useState('');\n  const [protien, setProtien] = React.useState('');\n  const [carbs, setCarbs] = React.useState('');\n  const [fat, setFat] = React.useState('');\n  const [macroBreakdown, setMacroBreakdown] = React.useState({\n    carbs: 0.45,\n    protien: 0.3,\n    fat: 0.25\n  });\n  const [submitted, setSubmitted] = React.useState(false);\n\n  const onSubmit = () => {\n    calcBMR();\n    setSubmitted(true);\n  };\n\n  const calcBMR = () => {\n    const bmr = Math.floor(66.47 + 6.24 * weight + 12.47 * (heightFt * 12 + heightIn) - 6.755 * age);\n    const bmrAdjusted = Math.floor(bmr * activity);\n    const bmrGoal = Math.floor(bmrAdjusted + weightChange);\n    setBMR(bmr);\n    setBMRAdjusted(bmrAdjusted);\n    setBMRGoal(bmrGoal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Macro Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            width: '40ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"weight\",\n          label: \"Weight (lb)\",\n          variant: \"outlined\",\n          value: weight,\n          onChange: e => setWeight(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"height-ft\",\n          label: \"Height (ft)\",\n          variant: \"outlined\",\n          value: heightFt,\n          onChange: e => setHeightFt(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"height-in\",\n          label: \"Height (in)\",\n          variant: \"outlined\",\n          value: heightIn,\n          onChange: e => setHeightIn(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"age\",\n          label: \"Age\",\n          variant: \"outlined\",\n          value: age,\n          onChange: e => setAge(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"activity-level\",\n          select: true,\n          label: \"Activity Level\",\n          value: activity,\n          onChange: e => setActivity(e.target.value),\n          children: activityLevelOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"weekly-weight-change\",\n          select: true,\n          label: \"Weekly Weight Change\",\n          value: weightChange,\n          onChange: e => setWeightChange(e.target.value),\n          children: weightChangeOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onSubmit(),\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), submitted && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            '& > :not(style)': {\n              m: 1,\n              width: '40ch'\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          style: {\n            paddingTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr\",\n            label: \"Basal Metabolic Rate (BMR)\",\n            variant: \"outlined\",\n            value: BMR,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr-adjusted\",\n            label: \"BMR Adjusted\",\n            variant: \"outlined\",\n            value: BMRAdjusted,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr-goal\",\n            label: `Goal Calories (${weightChange >= 0 ? '+' : ''} ${weightChange} calories) `,\n            variant: \"outlined\",\n            value: BMRGoal,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            marginTop: '20px',\n            padding: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Customization Options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  row: true,\n                  \"aria-label\": \"options\",\n                  name: \"row-radio-buttons-group\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"balanced\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 34\n                    }, this),\n                    label: \"Balanced\",\n                    onClick: () => {\n                      setMacroBreakdown({\n                        carbs: 0.45,\n                        protien: 0.3,\n                        fat: 0.25\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"high-carb\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 34\n                    }, this),\n                    label: \"High Carb\",\n                    onClick: () => {\n                      setMacroBreakdown({\n                        carbs: 0.5,\n                        protien: 0.3,\n                        fat: 0.2\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"low-carb\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 34\n                    }, this),\n                    label: \"Low Carb\",\n                    onClick: () => {\n                      setMacroBreakdown({\n                        carbs: 0.35,\n                        protien: 0.3,\n                        fat: 0.35\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Graph Placeholder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                component: \"form\",\n                sx: {\n                  '& > :not(style)': {\n                    m: 1,\n                    width: '15ch'\n                  }\n                },\n                noValidate: true,\n                autoComplete: \"off\",\n                style: {\n                  paddingTop: '15px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"carbs\",\n                  label: \"Carbs (g)\",\n                  variant: \"outlined\",\n                  value: BMRGoal * macroBreakdown.protien / 4,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"carbs-percent\",\n                  label: \"Carbs %\",\n                  variant: \"outlined\",\n                  value: macroBreakdown.carbs * 100,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"protien\",\n                  label: \"Protien (g)\",\n                  variant: \"outlined\",\n                  value: BMRGoal * macroBreakdown.protien / 4,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"protien-percent\",\n                  label: \"Protien %\",\n                  variant: \"outlined\",\n                  value: macroBreakdown.protien * 100,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"fat\",\n                  label: \"Fat (g)\",\n                  variant: \"outlined\",\n                  value: BMRGoal * macroBreakdown.protien / 9,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"fat-percent\",\n                  label: \"Fat %\",\n                  variant: \"outlined\",\n                  value: macroBreakdown.fat * 100,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MacroCalculator, \"o7LruW/IsKRjuhwkphgeCTtk7VU=\");\n\n_c = MacroCalculator;\nexport default MacroCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"MacroCalculator\");","map":{"version":3,"sources":["/Users/brycelewis/Documents/Work/Resume2/my-resume/src/Projects/MacroCalculator/MacroCalculator.js"],"names":["React","useState","Box","Container","Button","Grid","Paper","Typography","TextField","MenuItem","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","makeStyles","activityLevelOptions","weightChangeOptions","Hero","Footer","MacroCalculator","props","weight","setWeight","heightFt","setHeightFt","heightIn","setHeightIn","age","setAge","activity","setActivity","weightChange","setWeightChange","BMR","setBMR","BMRAdjusted","setBMRAdjusted","BMRGoal","setBMRGoal","protien","setProtien","carbs","setCarbs","fat","setFat","macroBreakdown","setMacroBreakdown","submitted","setSubmitted","onSubmit","calcBMR","bmr","Math","floor","bmrAdjusted","bmrGoal","m","width","e","parseInt","target","value","map","option","label","paddingTop","readOnly","marginTop","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  TextField,\n  MenuItem,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from '@mui/material';\nimport { makeStyles } from '@material-ui/core';\n\nimport { activityLevelOptions, weightChangeOptions } from './Assets/options';\n\nimport Hero from '../../Hero/Hero';\nimport Footer from '../../Footer/Footer';\n\nconst MacroCalculator = (props) => {\n  const [weight, setWeight] = React.useState('');\n  const [heightFt, setHeightFt] = React.useState('');\n  const [heightIn, setHeightIn] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [activity, setActivity] = React.useState('');\n  const [weightChange, setWeightChange] = React.useState('');\n\n  const [BMR, setBMR] = React.useState('');\n  const [BMRAdjusted, setBMRAdjusted] = React.useState('');\n  const [BMRGoal, setBMRGoal] = React.useState('');\n\n  const [protien, setProtien] = React.useState('');\n  const [carbs, setCarbs] = React.useState('');\n  const [fat, setFat] = React.useState('');\n\n  const [macroBreakdown, setMacroBreakdown] = React.useState({\n    carbs: 0.45,\n    protien: 0.3,\n    fat: 0.25,\n  });\n\n  const [submitted, setSubmitted] = React.useState(false);\n\n  const onSubmit = () => {\n    calcBMR();\n    setSubmitted(true);\n  };\n\n  const calcBMR = () => {\n    const bmr = Math.floor(\n      66.47 + 6.24 * weight + 12.47 * (heightFt * 12 + heightIn) - 6.755 * age\n    );\n\n    const bmrAdjusted = Math.floor(bmr * activity);\n    const bmrGoal = Math.floor(bmrAdjusted + weightChange);\n\n    setBMR(bmr);\n    setBMRAdjusted(bmrAdjusted);\n    setBMRGoal(bmrGoal);\n  };\n\n  return (\n    <Box>\n      <Container maxWidth=\"lg\">\n        <h1>Macro Calculator</h1>\n        <Box\n          component=\"form\"\n          sx={{\n            '& > :not(style)': { m: 1, width: '40ch' },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"weight\"\n            label=\"Weight (lb)\"\n            variant=\"outlined\"\n            value={weight}\n            onChange={(e) => setWeight(parseInt(e.target.value))}\n          />\n          <TextField\n            id=\"height-ft\"\n            label=\"Height (ft)\"\n            variant=\"outlined\"\n            value={heightFt}\n            onChange={(e) => setHeightFt(parseInt(e.target.value))}\n          />\n          <TextField\n            id=\"height-in\"\n            label=\"Height (in)\"\n            variant=\"outlined\"\n            value={heightIn}\n            onChange={(e) => setHeightIn(parseInt(e.target.value))}\n          />\n          <TextField\n            id=\"age\"\n            label=\"Age\"\n            variant=\"outlined\"\n            value={age}\n            onChange={(e) => setAge(parseInt(e.target.value))}\n          />\n\n          <TextField\n            id=\"activity-level\"\n            select\n            label=\"Activity Level\"\n            value={activity}\n            onChange={(e) => setActivity(e.target.value)}\n          >\n            {activityLevelOptions.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          <TextField\n            id=\"weekly-weight-change\"\n            select\n            label=\"Weekly Weight Change\"\n            value={weightChange}\n            onChange={(e) => setWeightChange(e.target.value)}\n          >\n            {weightChangeOptions.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n          <Button onClick={() => onSubmit()} variant=\"contained\">\n            Submit\n          </Button>\n        </Box>\n\n        {submitted && (\n          <Box>\n            <Box\n              component=\"form\"\n              sx={{\n                '& > :not(style)': { m: 1, width: '40ch' },\n              }}\n              noValidate\n              autoComplete=\"off\"\n              style={{ paddingTop: '20px' }}\n            >\n              <TextField\n                id=\"bmr\"\n                label=\"Basal Metabolic Rate (BMR)\"\n                variant=\"outlined\"\n                value={BMR}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                id=\"bmr-adjusted\"\n                label=\"BMR Adjusted\"\n                variant=\"outlined\"\n                value={BMRAdjusted}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                id=\"bmr-goal\"\n                label={`Goal Calories (${\n                  weightChange >= 0 ? '+' : ''\n                } ${weightChange} calories) `}\n                variant=\"outlined\"\n                value={BMRGoal}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Box>\n\n            <Paper elevation={3} style={{ marginTop: '20px', padding: '20px' }}>\n              <Grid container xs={12}>\n                <Grid item xs={12}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                      Customization Options\n                    </FormLabel>\n                    <RadioGroup\n                      row\n                      aria-label=\"options\"\n                      name=\"row-radio-buttons-group\"\n                    >\n                      <FormControlLabel\n                        value=\"balanced\"\n                        control={<Radio />}\n                        label=\"Balanced\"\n                        onClick={() => {\n                          setMacroBreakdown({\n                            carbs: 0.45,\n                            protien: 0.3,\n                            fat: 0.25,\n                          });\n                        }}\n                      />\n                      <FormControlLabel\n                        value=\"high-carb\"\n                        control={<Radio />}\n                        label=\"High Carb\"\n                        onClick={() => {\n                          setMacroBreakdown({\n                            carbs: 0.5,\n                            protien: 0.3,\n                            fat: 0.2,\n                          });\n                        }}\n                      />\n                      <FormControlLabel\n                        value=\"low-carb\"\n                        control={<Radio />}\n                        label=\"Low Carb\"\n                        onClick={() => {\n                          setMacroBreakdown({\n                            carbs: 0.35,\n                            protien: 0.3,\n                            fat: 0.35,\n                          });\n                        }}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={8}>\n                  <h1>Graph Placeholder</h1>\n                </Grid>\n                <Grid item xs={4}>\n                  <Box\n                    component=\"form\"\n                    sx={{\n                      '& > :not(style)': { m: 1, width: '15ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                    style={{ paddingTop: '15px' }}\n                  >\n                    <TextField\n                      id=\"carbs\"\n                      label=\"Carbs (g)\"\n                      variant=\"outlined\"\n                      value={(BMRGoal * macroBreakdown.protien) / 4}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"carbs-percent\"\n                      label=\"Carbs %\"\n                      variant=\"outlined\"\n                      value={macroBreakdown.carbs * 100}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"protien\"\n                      label=\"Protien (g)\"\n                      variant=\"outlined\"\n                      value={(BMRGoal * macroBreakdown.protien) / 4}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"protien-percent\"\n                      label=\"Protien %\"\n                      variant=\"outlined\"\n                      value={macroBreakdown.protien * 100}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n                    <TextField\n                      id=\"fat\"\n                      label=\"Fat (g)\"\n                      variant=\"outlined\"\n                      value={(BMRGoal * macroBreakdown.protien) / 9}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"fat-percent\"\n                      label=\"Fat %\"\n                      variant=\"outlined\"\n                      value={macroBreakdown.fat * 100}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  </Box>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Box>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default MacroCalculator;\n"]},"metadata":{},"sourceType":"module"}