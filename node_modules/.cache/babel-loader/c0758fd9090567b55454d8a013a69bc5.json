{"ast":null,"code":"var _jsxFileName = \"/Users/brycelewis/Documents/Work/Resume2/my-resume/src/Projects/MacroCalculator/MacroCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Container, Button, Grid, Paper, Typography, TextField, MenuItem, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio } from '@mui/material';\nimport { makeStyles } from '@material-ui/core';\nimport InputForm from './Components/InputForm';\nimport Hero from '../../Hero/Hero';\nimport Footer from '../../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MacroCalculator = props => {\n  _s();\n\n  const [weight, setWeight] = React.useState('');\n  const [heightFt, setHeightFt] = React.useState('');\n  const [heightIn, setHeightIn] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [activity, setActivity] = React.useState('');\n  const [weightChange, setWeightChange] = React.useState('');\n  const [BMR, setBMR] = React.useState('');\n  const [BMRAdjusted, setBMRAdjusted] = React.useState('');\n  const [BMRGoal, setBMRGoal] = React.useState('');\n  const [protien, setProtien] = React.useState('');\n  const [carbs, setCarbs] = React.useState('');\n  const [fat, setFat] = React.useState('');\n  const [macroBreakdown, setMacroBreakdown] = React.useState({\n    carbs: 0.45,\n    protien: 0.3,\n    fat: 0.25\n  });\n  const [submitted, setSubmitted] = React.useState(false);\n\n  const onSubmit = () => {\n    calcBMR();\n    setSubmitted(true);\n  };\n\n  const calcBMR = () => {\n    const bmr = Math.floor(66.47 + 6.24 * weight + 12.47 * (heightFt * 12 + heightIn) - 6.755 * age);\n    const bmrAdjusted = Math.floor(bmr * activity);\n    const bmrGoal = Math.floor(bmrAdjusted + weightChange);\n    setBMR(bmr);\n    setBMRAdjusted(bmrAdjusted);\n    setBMRGoal(bmrGoal);\n    calcMacros(bmrGoal, macroBreakdown);\n  };\n\n  const calcMacros = (bmrGoal, macro) => {\n    setProtien(Math.floor(bmrGoal * macro.protien / 4));\n    setCarbs(Math.floor(bmrGoal * macro.carbs / 4));\n    setFat(Math.floor(bmrGoal * macro.fat / 9));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Macro Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        weight: weight,\n        setWeight: setWeight,\n        heightFt: heightFt,\n        setHeightFt: setHeightFt,\n        heightIn: heightIn,\n        setHeightIn: setHeightIn,\n        age: age,\n        setAge: setAge,\n        activity: activity,\n        setActivity: setActivity,\n        weightChange: weightChange,\n        setWeightChange: setWeightChange,\n        submitted: submitted,\n        setSubmitted: setSubmitted,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), submitted && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            '& > :not(style)': {\n              m: 1,\n              width: '40ch'\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          style: {\n            paddingTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr\",\n            label: \"Basal Metabolic Rate (BMR)\",\n            variant: \"outlined\",\n            value: BMR,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr-adjusted\",\n            label: \"BMR Adjusted\",\n            variant: \"outlined\",\n            value: BMRAdjusted,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr-goal\",\n            label: `Goal Calories (${weightChange >= 0 ? '+' : ''} ${weightChange} calories) `,\n            variant: \"outlined\",\n            value: BMRGoal,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            marginTop: '20px',\n            padding: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Customization Options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  row: true,\n                  \"aria-label\": \"options\",\n                  name: \"row-radio-buttons-group\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"balanced\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 34\n                    }, this),\n                    label: \"Balanced\",\n                    onClick: () => {\n                      setMacroBreakdown({\n                        carbs: 0.45,\n                        protien: 0.3,\n                        fat: 0.25\n                      });\n                      calcMacros(BMRGoal, {\n                        carbs: 0.45,\n                        protien: 0.3,\n                        fat: 0.25\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"high-carb\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 34\n                    }, this),\n                    label: \"High Carb\",\n                    onClick: () => {\n                      setMacroBreakdown({\n                        carbs: 0.5,\n                        protien: 0.3,\n                        fat: 0.2\n                      });\n                      calcMacros(BMRGoal, {\n                        carbs: 0.5,\n                        protien: 0.3,\n                        fat: 0.2\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"low-carb\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 34\n                    }, this),\n                    label: \"Low Carb\",\n                    onClick: () => {\n                      setMacroBreakdown({\n                        carbs: 0.4,\n                        protien: 0.3,\n                        fat: 0.3\n                      });\n                      calcMacros(BMRGoal, {\n                        carbs: 0.4,\n                        protien: 0.3,\n                        fat: 0.3\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"cut\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 34\n                    }, this),\n                    label: \"BodyBuilder Cut\",\n                    onClick: () => {\n                      setMacroBreakdown({\n                        carbs: 0.42,\n                        protien: 0.38,\n                        fat: 0.2\n                      });\n                      calcMacros(BMRGoal, {\n                        carbs: 0.42,\n                        protien: 0.38,\n                        fat: 0.2\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"bulk\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 34\n                    }, this),\n                    label: \"BodyBuilder Clean Bulk\",\n                    onClick: () => {\n                      setMacroBreakdown({\n                        carbs: 0.42,\n                        protien: 0.28,\n                        fat: 0.3\n                      });\n                      calcMacros(BMRGoal, {\n                        carbs: 0.42,\n                        protien: 0.28,\n                        fat: 0.3\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Graph Placeholder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                component: \"form\",\n                sx: {\n                  '& > :not(style)': {\n                    m: 1,\n                    width: '15ch'\n                  }\n                },\n                noValidate: true,\n                autoComplete: \"off\",\n                style: {\n                  paddingTop: '15px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"carbs\",\n                  label: \"Carbs (g)\",\n                  variant: \"outlined\",\n                  value: carbs,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"carbs-percent\",\n                  label: \"Carbs %\",\n                  variant: \"outlined\",\n                  value: Math.round(Math.round(macroBreakdown.carbs * 100)),\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"protien\",\n                  label: \"Protien (g)\",\n                  variant: \"outlined\",\n                  value: protien,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"protien-percent\",\n                  label: \"Protien %\",\n                  variant: \"outlined\",\n                  value: Math.round(macroBreakdown.protien * 100),\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"fat\",\n                  label: \"Fat (g)\",\n                  variant: \"outlined\",\n                  value: fat,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"fat-percent\",\n                  label: \"Fat %\",\n                  variant: \"outlined\",\n                  value: macroBreakdown.fat * 100,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MacroCalculator, \"o7LruW/IsKRjuhwkphgeCTtk7VU=\");\n\n_c = MacroCalculator;\nexport default MacroCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"MacroCalculator\");","map":{"version":3,"sources":["/Users/brycelewis/Documents/Work/Resume2/my-resume/src/Projects/MacroCalculator/MacroCalculator.js"],"names":["React","useState","Box","Container","Button","Grid","Paper","Typography","TextField","MenuItem","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","makeStyles","InputForm","Hero","Footer","MacroCalculator","props","weight","setWeight","heightFt","setHeightFt","heightIn","setHeightIn","age","setAge","activity","setActivity","weightChange","setWeightChange","BMR","setBMR","BMRAdjusted","setBMRAdjusted","BMRGoal","setBMRGoal","protien","setProtien","carbs","setCarbs","fat","setFat","macroBreakdown","setMacroBreakdown","submitted","setSubmitted","onSubmit","calcBMR","bmr","Math","floor","bmrAdjusted","bmrGoal","calcMacros","macro","m","width","paddingTop","readOnly","marginTop","padding","round"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  TextField,\n  MenuItem,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from '@mui/material';\nimport { makeStyles } from '@material-ui/core';\n\nimport InputForm from './Components/InputForm';\n\nimport Hero from '../../Hero/Hero';\nimport Footer from '../../Footer/Footer';\n\nconst MacroCalculator = (props) => {\n  const [weight, setWeight] = React.useState('');\n  const [heightFt, setHeightFt] = React.useState('');\n  const [heightIn, setHeightIn] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [activity, setActivity] = React.useState('');\n  const [weightChange, setWeightChange] = React.useState('');\n\n  const [BMR, setBMR] = React.useState('');\n  const [BMRAdjusted, setBMRAdjusted] = React.useState('');\n  const [BMRGoal, setBMRGoal] = React.useState('');\n\n  const [protien, setProtien] = React.useState('');\n  const [carbs, setCarbs] = React.useState('');\n  const [fat, setFat] = React.useState('');\n\n  const [macroBreakdown, setMacroBreakdown] = React.useState({\n    carbs: 0.45,\n    protien: 0.3,\n    fat: 0.25,\n  });\n\n  const [submitted, setSubmitted] = React.useState(false);\n\n  const onSubmit = () => {\n    calcBMR();\n    setSubmitted(true);\n  };\n\n  const calcBMR = () => {\n    const bmr = Math.floor(\n      66.47 + 6.24 * weight + 12.47 * (heightFt * 12 + heightIn) - 6.755 * age\n    );\n\n    const bmrAdjusted = Math.floor(bmr * activity);\n    const bmrGoal = Math.floor(bmrAdjusted + weightChange);\n\n    setBMR(bmr);\n    setBMRAdjusted(bmrAdjusted);\n    setBMRGoal(bmrGoal);\n\n    calcMacros(bmrGoal, macroBreakdown);\n  };\n\n  const calcMacros = (bmrGoal, macro) => {\n    setProtien(Math.floor((bmrGoal * macro.protien) / 4));\n    setCarbs(Math.floor((bmrGoal * macro.carbs) / 4));\n    setFat(Math.floor((bmrGoal * macro.fat) / 9));\n  };\n\n  return (\n    <Box>\n      <Container maxWidth=\"lg\">\n        <h1>Macro Calculator</h1>\n\n        <InputForm\n          weight={weight}\n          setWeight={setWeight}\n          heightFt={heightFt}\n          setHeightFt={setHeightFt}\n          heightIn={heightIn}\n          setHeightIn={setHeightIn}\n          age={age}\n          setAge={setAge}\n          activity={activity}\n          setActivity={setActivity}\n          weightChange={weightChange}\n          setWeightChange={setWeightChange}\n          submitted={submitted}\n          setSubmitted={setSubmitted}\n          onSubmit={onSubmit}\n        />\n\n        {submitted && (\n          <Box>\n            <Box\n              component=\"form\"\n              sx={{\n                '& > :not(style)': { m: 1, width: '40ch' },\n              }}\n              noValidate\n              autoComplete=\"off\"\n              style={{ paddingTop: '20px' }}\n            >\n              <TextField\n                id=\"bmr\"\n                label=\"Basal Metabolic Rate (BMR)\"\n                variant=\"outlined\"\n                value={BMR}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                id=\"bmr-adjusted\"\n                label=\"BMR Adjusted\"\n                variant=\"outlined\"\n                value={BMRAdjusted}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                id=\"bmr-goal\"\n                label={`Goal Calories (${\n                  weightChange >= 0 ? '+' : ''\n                } ${weightChange} calories) `}\n                variant=\"outlined\"\n                value={BMRGoal}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Box>\n\n            <Paper elevation={3} style={{ marginTop: '20px', padding: '20px' }}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                      Customization Options\n                    </FormLabel>\n                    <RadioGroup\n                      row\n                      aria-label=\"options\"\n                      name=\"row-radio-buttons-group\"\n                    >\n                      <FormControlLabel\n                        value=\"balanced\"\n                        control={<Radio />}\n                        label=\"Balanced\"\n                        onClick={() => {\n                          setMacroBreakdown({\n                            carbs: 0.45,\n                            protien: 0.3,\n                            fat: 0.25,\n                          });\n                          calcMacros(BMRGoal, {\n                            carbs: 0.45,\n                            protien: 0.3,\n                            fat: 0.25,\n                          });\n                        }}\n                      />\n                      <FormControlLabel\n                        value=\"high-carb\"\n                        control={<Radio />}\n                        label=\"High Carb\"\n                        onClick={() => {\n                          setMacroBreakdown({\n                            carbs: 0.5,\n                            protien: 0.3,\n                            fat: 0.2,\n                          });\n                          calcMacros(BMRGoal, {\n                            carbs: 0.5,\n                            protien: 0.3,\n                            fat: 0.2,\n                          });\n                        }}\n                      />\n                      <FormControlLabel\n                        value=\"low-carb\"\n                        control={<Radio />}\n                        label=\"Low Carb\"\n                        onClick={() => {\n                          setMacroBreakdown({\n                            carbs: 0.4,\n                            protien: 0.3,\n                            fat: 0.3,\n                          });\n                          calcMacros(BMRGoal, {\n                            carbs: 0.4,\n                            protien: 0.3,\n                            fat: 0.3,\n                          });\n                        }}\n                      />\n                      <FormControlLabel\n                        value=\"cut\"\n                        control={<Radio />}\n                        label=\"BodyBuilder Cut\"\n                        onClick={() => {\n                          setMacroBreakdown({\n                            carbs: 0.42,\n                            protien: 0.38,\n                            fat: 0.2,\n                          });\n                          calcMacros(BMRGoal, {\n                            carbs: 0.42,\n                            protien: 0.38,\n                            fat: 0.2,\n                          });\n                        }}\n                      />\n                      <FormControlLabel\n                        value=\"bulk\"\n                        control={<Radio />}\n                        label=\"BodyBuilder Clean Bulk\"\n                        onClick={() => {\n                          setMacroBreakdown({\n                            carbs: 0.42,\n                            protien: 0.28,\n                            fat: 0.3,\n                          });\n                          calcMacros(BMRGoal, {\n                            carbs: 0.42,\n                            protien: 0.28,\n                            fat: 0.3,\n                          });\n                        }}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={8}>\n                  <h1>Graph Placeholder</h1>\n                </Grid>\n                <Grid item xs={4}>\n                  <Box\n                    component=\"form\"\n                    sx={{\n                      '& > :not(style)': { m: 1, width: '15ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                    style={{ paddingTop: '15px' }}\n                  >\n                    <TextField\n                      id=\"carbs\"\n                      label=\"Carbs (g)\"\n                      variant=\"outlined\"\n                      value={carbs}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"carbs-percent\"\n                      label=\"Carbs %\"\n                      variant=\"outlined\"\n                      value={Math.round(Math.round(macroBreakdown.carbs * 100))}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"protien\"\n                      label=\"Protien (g)\"\n                      variant=\"outlined\"\n                      value={protien}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"protien-percent\"\n                      label=\"Protien %\"\n                      variant=\"outlined\"\n                      value={Math.round(macroBreakdown.protien * 100)}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n                    <TextField\n                      id=\"fat\"\n                      label=\"Fat (g)\"\n                      variant=\"outlined\"\n                      value={fat}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"fat-percent\"\n                      label=\"Fat %\"\n                      variant=\"outlined\"\n                      value={macroBreakdown.fat * 100}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  </Box>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Box>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default MacroCalculator;\n"]},"metadata":{},"sourceType":"module"}