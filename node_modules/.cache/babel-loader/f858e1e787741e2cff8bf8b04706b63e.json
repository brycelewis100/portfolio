{"ast":null,"code":"var _jsxFileName = \"/Users/brycelewis/Documents/Work/Resume2/my-resume/src/Projects/MacroCalculator/MacroCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Container, Button, Grid, Paper, Typography, TextField, MenuItem } from '@mui/material';\nimport { makeStyles } from '@material-ui/core';\nimport { activityLevelOptions, weightChangeOptions } from './Assets/options';\nimport Hero from '../../Hero/Hero';\nimport Footer from '../../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MacroCalculator = props => {\n  _s();\n\n  const [weight, setWeight] = React.useState('');\n  const [heightFt, setHeightFt] = React.useState('');\n  const [heightIn, setHeightIn] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [activity, setActivity] = React.useState('');\n  const [weightChange, setWeightChange] = React.useState('');\n  const [BMR, setBMR] = React.useState('');\n  const [BMRAdjusted, setBMRAdjusted] = React.useState('');\n  const [BMRGoal, setBMRGoal] = React.useState('');\n  const [protien, setProtien] = React.useState('');\n  const [carbs, setCarbs] = React.useState('');\n  const [fat, setFat] = React.useState('');\n  const [submitted, setSubmitted] = React.useState(false);\n\n  const onSubmit = () => {\n    calcBMR();\n    setSubmitted(true);\n  };\n\n  const calcBMR = () => {\n    const bmr = Math.floor(66.47 + 6.24 * weight + 12.47 * (heightFt * 12 + heightIn) - 6.755 * age);\n    const bmrAdjusted = bmr * activity;\n    setBMR(bmr);\n    setBMRAdjusted(Math.floor(bmrAdjusted));\n    setBMRGoal(Math.floor(bmrAdjusted + weightChange));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Macro Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            width: '40ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"weight\",\n          label: \"Weight (lb)\",\n          variant: \"outlined\",\n          value: weight,\n          onChange: e => setWeight(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"height-ft\",\n          label: \"Height (ft)\",\n          variant: \"outlined\",\n          value: heightFt,\n          onChange: e => setHeightFt(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"height-in\",\n          label: \"Height (in)\",\n          variant: \"outlined\",\n          value: heightIn,\n          onChange: e => setHeightIn(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"age\",\n          label: \"Age\",\n          variant: \"outlined\",\n          value: age,\n          onChange: e => setAge(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"activity-level\",\n          select: true,\n          label: \"Activity Level\",\n          value: activity,\n          onChange: e => setActivity(e.target.value),\n          children: activityLevelOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"weekly-weight-change\",\n          select: true,\n          label: \"Weekly Weight Change\",\n          value: weightChange,\n          onChange: e => setWeightChange(e.target.value),\n          children: weightChangeOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onSubmit(),\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), submitted && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            '& > :not(style)': {\n              m: 1,\n              width: '40ch'\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          style: {\n            paddingTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr\",\n            label: \"Basal Metabolic Rate (BMR)\",\n            variant: \"outlined\",\n            value: BMR,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr-adjusted\",\n            label: \"BMR Adjusted\",\n            variant: \"outlined\",\n            value: BMRAdjusted,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"bmr-goal\",\n            label: `Goal Calories (${weightChange >= 0 ? '+' : ''} ${weightChange} calories) `,\n            variant: \"outlined\",\n            value: BMRGoal,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              sx: {\n                '& > :not(style)': {\n                  m: 1,\n                  width: '40ch'\n                }\n              },\n              noValidate: true,\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"protien\",\n                label: \"Protien (g)\",\n                variant: \"outlined\",\n                value: protien,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"carbs\",\n                label: \"Carbs (g)\",\n                variant: \"outlined\",\n                value: carbs,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"fat\",\n                label: \"Fat (g)\",\n                variant: \"outlined\",\n                value: fat,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MacroCalculator, \"uGjXpEqZbP/n6fBbwK0Evx7sLXU=\");\n\n_c = MacroCalculator;\nexport default MacroCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"MacroCalculator\");","map":{"version":3,"sources":["/Users/brycelewis/Documents/Work/Resume2/my-resume/src/Projects/MacroCalculator/MacroCalculator.js"],"names":["React","useState","Box","Container","Button","Grid","Paper","Typography","TextField","MenuItem","makeStyles","activityLevelOptions","weightChangeOptions","Hero","Footer","MacroCalculator","props","weight","setWeight","heightFt","setHeightFt","heightIn","setHeightIn","age","setAge","activity","setActivity","weightChange","setWeightChange","BMR","setBMR","BMRAdjusted","setBMRAdjusted","BMRGoal","setBMRGoal","protien","setProtien","carbs","setCarbs","fat","setFat","submitted","setSubmitted","onSubmit","calcBMR","bmr","Math","floor","bmrAdjusted","m","width","e","parseInt","target","value","map","option","label","paddingTop","readOnly"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  TextField,\n  MenuItem,\n} from '@mui/material';\nimport { makeStyles } from '@material-ui/core';\n\nimport { activityLevelOptions, weightChangeOptions } from './Assets/options';\n\nimport Hero from '../../Hero/Hero';\nimport Footer from '../../Footer/Footer';\n\nconst MacroCalculator = (props) => {\n  const [weight, setWeight] = React.useState('');\n  const [heightFt, setHeightFt] = React.useState('');\n  const [heightIn, setHeightIn] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [activity, setActivity] = React.useState('');\n  const [weightChange, setWeightChange] = React.useState('');\n\n  const [BMR, setBMR] = React.useState('');\n  const [BMRAdjusted, setBMRAdjusted] = React.useState('');\n  const [BMRGoal, setBMRGoal] = React.useState('');\n\n  const [protien, setProtien] = React.useState('');\n  const [carbs, setCarbs] = React.useState('');\n  const [fat, setFat] = React.useState('');\n\n  const [submitted, setSubmitted] = React.useState(false);\n\n  const onSubmit = () => {\n    calcBMR();\n    setSubmitted(true);\n  };\n\n  const calcBMR = () => {\n    const bmr = Math.floor(\n      66.47 + 6.24 * weight + 12.47 * (heightFt * 12 + heightIn) - 6.755 * age\n    );\n\n    const bmrAdjusted = bmr * activity;\n\n    setBMR(bmr);\n    setBMRAdjusted(Math.floor(bmrAdjusted));\n    setBMRGoal(Math.floor(bmrAdjusted + weightChange));\n  };\n\n  return (\n    <Box>\n      <Container maxWidth=\"lg\">\n        <h1>Macro Calculator</h1>\n        <Box\n          component=\"form\"\n          sx={{\n            '& > :not(style)': { m: 1, width: '40ch' },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"weight\"\n            label=\"Weight (lb)\"\n            variant=\"outlined\"\n            value={weight}\n            onChange={(e) => setWeight(parseInt(e.target.value))}\n          />\n          <TextField\n            id=\"height-ft\"\n            label=\"Height (ft)\"\n            variant=\"outlined\"\n            value={heightFt}\n            onChange={(e) => setHeightFt(parseInt(e.target.value))}\n          />\n          <TextField\n            id=\"height-in\"\n            label=\"Height (in)\"\n            variant=\"outlined\"\n            value={heightIn}\n            onChange={(e) => setHeightIn(parseInt(e.target.value))}\n          />\n          <TextField\n            id=\"age\"\n            label=\"Age\"\n            variant=\"outlined\"\n            value={age}\n            onChange={(e) => setAge(parseInt(e.target.value))}\n          />\n\n          <TextField\n            id=\"activity-level\"\n            select\n            label=\"Activity Level\"\n            value={activity}\n            onChange={(e) => setActivity(e.target.value)}\n          >\n            {activityLevelOptions.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          <TextField\n            id=\"weekly-weight-change\"\n            select\n            label=\"Weekly Weight Change\"\n            value={weightChange}\n            onChange={(e) => setWeightChange(e.target.value)}\n          >\n            {weightChangeOptions.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n          <Button onClick={() => onSubmit()} variant=\"contained\">\n            Submit\n          </Button>\n        </Box>\n\n        {submitted && (\n          <Box>\n            <Box\n              component=\"form\"\n              sx={{\n                '& > :not(style)': { m: 1, width: '40ch' },\n              }}\n              noValidate\n              autoComplete=\"off\"\n              style={{ paddingTop: '20px' }}\n            >\n              <TextField\n                id=\"bmr\"\n                label=\"Basal Metabolic Rate (BMR)\"\n                variant=\"outlined\"\n                value={BMR}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                id=\"bmr-adjusted\"\n                label=\"BMR Adjusted\"\n                variant=\"outlined\"\n                value={BMRAdjusted}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                id=\"bmr-goal\"\n                label={`Goal Calories (${\n                  weightChange >= 0 ? '+' : ''\n                } ${weightChange} calories) `}\n                variant=\"outlined\"\n                value={BMRGoal}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Box>\n            <Grid container xs={12}>\n              <Grid item xs={4}>\n                <Box\n                  component=\"form\"\n                  sx={{\n                    '& > :not(style)': { m: 1, width: '40ch' },\n                  }}\n                  noValidate\n                  autoComplete=\"off\"\n                >\n                  <TextField\n                    id=\"protien\"\n                    label=\"Protien (g)\"\n                    variant=\"outlined\"\n                    value={protien}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    id=\"carbs\"\n                    label=\"Carbs (g)\"\n                    variant=\"outlined\"\n                    value={carbs}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    id=\"fat\"\n                    label=\"Fat (g)\"\n                    variant=\"outlined\"\n                    value={fat}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default MacroCalculator;\n"]},"metadata":{},"sourceType":"module"}